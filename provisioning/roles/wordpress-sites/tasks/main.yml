---
- include: database.yml
- include: nginx.yml
- include: directories.yml

- name: Create .env file of sites
  dotenv: path={{ www_root }}/{{ item.site_name }}/shared/.env
          state=present
          items="{{ item.env }}"
          generate={{ generated_env_vars | join(',') }}
          owner={{ item.user | default(user) }}
          group=www-data
          mode=0755
  with_items: wordpress_sites

- name: Link .env file
  file: src={{ www_root }}/{{ item.site_name }}/shared/.env
        dest={{ www_root }}/{{ item.site_name }}/current/.env
        state=link
        force=yes
        owner={{ item.user }}
        group=www-data
        mode=0755
  with_items: wordpress_sites

- name: Add WP user to www-data group
  user: name={{ item.user }} groups=www-data state=present append=yes
  with_items: wordpress_sites

- name: Install Dependencies with Composer
  command: composer install chdir={{ www_root }}/{{ item.site_name }}/current/
  with_items: wordpress_sites
  when: item.run_composer|default(False) == True

- name: WP installed?
  command: wp core is-installed --allow-root chdir={{ www_root }}/{{ item.site_name }}/current/
  register: site_statuses
  ignore_errors: True
  with_items: wordpress_sites

- name: Install WP
  command: wp core install
           --allow-root
           --url='{{ item.item.env.wp_home }}'
           --title='{{ item.item.site_title | default(item.item.site_name) }}'
           --admin_user='{{ item.item.admin_user }}'
           --admin_password='{{ item.item.admin_password }}'
           --admin_email='{{ item.item.admin_email }}'
           chdir='{{ www_root }}/{{ item.item.site_name }}/current/'
  with_items: site_statuses.results
  when: item.rc == 1 and item.item.site_install == True and item.item.multisite.enabled|default(False) == False
  notify: reload nginx

- name: Install WP Multisite
  command: wp core multisite-install
           --allow-root
           --url='{{ item.item.env.wp_home }}'
           --base='{{ item.item.multisite.base_path | default('/') }}'
           --subdomains='{{ item.item.multisite.subdomains | default('false') }}'
           --title='{{ item.item.site_title | default(item.item.site_name) }}'
           --admin_user='{{ item.item.admin_user }}'
           --admin_password='{{ item.item.admin_password }}'
           --admin_email='{{ item.item.admin_email }}'
           chdir='{{ www_root }}/{{ item.item.site_name }}/current/'
  with_items: site_statuses.results
  when: item.rc == 1 and item.item.site_install == True and item.item.multisite.enabled|default(False) == True
  notify: reload nginx

- name: Setup system cron
  cron: name='{{ item.site_name }} WordPress cron'
        minute='*/15'
        user={{ item.user }}
        job='curl -s {{ item.env.wp_siteurl }}/wp-cron.php'
        cron_file=wordpress_{{ item.site_name }}
  with_items: wordpress_sites
  when: item.system_cron|default(False) == True

