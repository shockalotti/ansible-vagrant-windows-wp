#!/usr/bin/python
# -*- coding: utf-8 -*-

# (c) 2014, Scott Walkinshaw <scott.walkinshaw@gmail.com>
#
# This file is part of Ansible
#
# Ansible is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ansible is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.

import os
import ast
import string
import random

def random_string():
  return ''.join(random.choice(string.letters + string.digits + string.punctuation) for _ in range(64))

def append_generated_items(items, generate):
  generated_items = generate.split(',')

  for key in generated_items:
    items[key.upper()] = random_string()

  return items

def write_changes(module, contents, dest):
  tmpfd, tmpfile = tempfile.mkstemp()
  f = os.fdopen(tmpfd, 'wb')
  f.write(contents)
  f.close()

  module.atomic_move(tmpfile, dest)

def check_file_attrs(module, changed, message):
  file_args = module.load_file_common_arguments(module.params)
  if module.set_file_attributes_if_different(file_args, False):

    if changed:
      message += " and "
      changed  = True
      message += "ownership, perms or SE linux context changed"

  return message, changed

def main():
  module = AnsibleModule(
    argument_spec = dict(
      state = dict(choices=['present'], default=None),
      path  = dict(aliases=['dest', 'name'], required=True),
      items = dict(default=None, required=True, type='str'),
      generate = dict(default=None, type='str'),
      force = dict(required=False, default=False, type='bool')
    ),
    add_file_common_args = True,
    supports_check_mode = True
  )

  params = module.params
  state  = params['state']
  force  = params['force']
  generate  = params['generate']
  items  = ast.literal_eval(params['items'])

  dest = os.path.expanduser(params['path'])

  if os.path.isdir(dest):
    module.fail_json(rc=256, msg='Destination %s is a directory !' % dest)
  else:
    if state == 'present':
      contents = []

      if generate:
        items = append_generated_items(items, generate)

      for k, v in items.iteritems():
        contents.append("{0}='{1}'".format(k.upper(), v))

      contents  = '\n'.join(contents)
      contents += '\n'

      write_changes(module, contents, dest)

  msg = '.env file created'
  msg, changed = check_file_attrs(module, True, msg)
  module.exit_json(changed=changed, msg=msg)

from ansible.module_utils.basic import *

main()

